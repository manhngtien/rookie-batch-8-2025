//using EcommerceNashApp.Api.Controllers.Base;
//using EcommerceNashApp.Api.Extensions;
//using EcommerceNashApp.Core.Helpers.Params;
//using EcommerceNashApp.Core.Interfaces.IServices;
//using EcommerceNashApp.Shared.DTOs.Request;
//using EcommerceNashApp.Shared.DTOs.Response;
//using Microsoft.AspNetCore.Authorization;
//using Microsoft.AspNetCore.Mvc;

//namespace EcommerceNashApp.Api.Controllers
//{
//    [Route("api/[controller]")]
//    [ApiController]
//    public class ProductsController : BaseApiController
//    {
//        private readonly IProductService _productService;

//        public ProductsController(IProductService productService)
//        {
//            _productService = productService;
//        }

//        [HttpGet]
//        public async Task<ActionResult<IEnumerable<ProductResponse>>> GetProducts([FromQuery] ProductParams productParams)
//        {
//            var products = await _productService.GetProductsAsync(productParams);
//            Response.AddPaginationHeader(products.Metadata);
//            return Ok(products);
//        }

//        [HttpGet("{id}")]
//        public async Task<ActionResult<ProductResponse>> GetProductById(Guid id)
//        {
//            var product = await _productService.GetProductByIdAsync(id);
//            return Ok(product);
//        }

//        [HttpGet("category/{categoryId}")]
//        public async Task<ActionResult<IEnumerable<ProductResponse>>> GetProductsByCategoryId(Guid categoryId, [FromQuery] ProductParams productParams)
//        {
//            var products = await _productService.GetProductsByCategoryIdAsync(categoryId, productParams);
//            Response.AddPaginationHeader(products.Metadata);
//            return Ok(products);
//        }

//        [HttpPost]
//        [Authorize(Policy = "RequireAdminRole")]
//        public async Task<ActionResult<ProductResponse>> CreateProduct([FromForm] ProductRequest productRequest)
//        {
//            var createdProduct = await _productService.CreateProductAsync(productRequest);
//            return CreatedAtAction(nameof(GetProductById), new { id = createdProduct.Id }, createdProduct);
//        }

//        [HttpPut]
//        [Authorize(Policy = "RequireAdminRole")]
//        public IActionResult UpdateProducts()
//        {
//            return MethodNotAllowed();
//        }

//        [HttpPut("{id}")]
//        [Authorize(Policy = "RequireAdminRole")]
//        public async Task<IActionResult> UpdateProduct(Guid id, [FromForm] ProductRequest productRequest)
//        {
//            await _productService.UpdateProductAsync(id, productRequest);
//            return NoContent();
//        }

//        [HttpPatch]
//        [Authorize(Policy = "RequireAdminRole")]
//        public IActionResult PatchProducts()
//        {
//            return MethodNotAllowed();
//        }

//        [HttpPatch("{id}")]
//        [Authorize(Policy = "RequireAdminRole")]
//        public async Task<IActionResult> PatchProduct(Guid id, [FromForm] ProductRequest productRequest)
//        {
//            await _productService.UpdateProductAsync(id, productRequest);
//            return NoContent();
//        }

//        [HttpDelete]
//        [Authorize(Policy = "RequireAdminRole")]
//        public IActionResult DeleteProducts()
//        {
//            return MethodNotAllowed();
//        }

//        [HttpDelete("{id}")]
//        [Authorize(Policy = "RequireAdminRole")]
//        public async Task<IActionResult> DeleteProduct(Guid id)
//        {
//            await _productService.DeleteProductAsync(id);
//            return NoContent();
//        }

//        private IActionResult MethodNotAllowed()
//        {
//            return StatusCode(StatusCodes.Status405MethodNotAllowed);
//        }
//    }
//}